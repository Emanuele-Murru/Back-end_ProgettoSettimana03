package App;

import java.time.LocalDate;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

import org.jboss.logging.Logger;

import entities.Libri;
import entities.Periodicita;
import entities.Prestito;
import entities.Prodotto;
import entities.Riviste;
import entities.Utente;
import utils.CatalogoDAO;

public class Main {
	private static EntityManagerFactory emf = Persistence.createEntityManagerFactory("ProgettoSettimana03");
	private static Logger log = Logger.getLogger(Main.class);

		public static void main(String[] args) {
			EntityManager em = emf.createEntityManager();
			CatalogoDAO ctg = new CatalogoDAO(em);

			// -----------------------SAVE-------------------------------------
			Utente utente1 = new Utente("225487", "Emanuele", "Murru", LocalDate.of(1998, 04, 02));
			Utente utente2 = new Utente("984248", "Marco", "M&P", LocalDate.of(1983, 02, 25));

			Libri libro1 = new Libri(1234567891L, "Uno, Nessuno, Centomila", 1926, 224, "PIRANDELLO", "Romanzo - Narrativa");
			Libri libro2 = new Libri(1234567890L, "Il Silmarillion", 2007, 682, "J.R.R. TOLKIEN", "Romanzo - Fantasy - Mitopoiesi");

			Riviste rivista1 = new Riviste(1234567892L, "Focus", 1998, 45, Periodicita.SETTIMANALE);
			Riviste rivista2 = new Riviste(1234567893L, "Vivair", 1994, 33, Periodicita.SEMESTRALE);

			ctg.addUser(utente1);
			ctg.addUser(utente2);

			ctg.addItem(libro1);
			ctg.addItem(libro2);
			ctg.addItem(rivista1);
			ctg.addItem(rivista2);

			ctg.cancellaTramiteIsbnCode(1234567893L);

			Prodotto item = ctg.cercaTramiteIsbnCode(1234567893L);
			log.info(item);

			List<Prodotto> elementiAnno = ctg.ricercaPerAnnoPubblicazione(2007);
			log.info(elementiAnno);

			List<Prodotto> elementiAutore = ctg.cercaTramiteAutore("Tolkien");
			log.info(elementiAutore);

			List<Prodotto> elementiTitolo = ctg.cercaTramiteTitolo("Focus");
			log.info(elementiTitolo);

			Prestito user = new Prestito(utente1, rivista1, LocalDate.of(2022, 5, 30), LocalDate.of(2022, 7, 30),
					LocalDate.of(2022, 9, 10));
			ctg.addPrestito(user);

			List<Prestito> prestitiUtente = ctg.cercaPrestitiUtente("032659");
			log.info(prestitiUtente);

			List<Prestito> prestitiScadutiNonRestituiti = ctg.cercaPrestitiScaduti();
			log.info(prestitiScadutiNonRestituiti);

			em.close();
			emf.close();
	}
}
